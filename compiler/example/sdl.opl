func main() int {
  if SDL_Init(uint(0x20)) < 0 { // SDL_INIT_VIDEO
    printf("Failed to initialize SDL: %s\n", SDL_GetError());
    return 1;
  }
  printf("Creating a window\n");
  window := SDL_CreateWindow("SDL by OpeLa", 0x1fff0000, 0x1fff0000, 300, 200, uint(0));
  renderer := SDL_CreateRenderer(window, -1, uint(6));

  color := 0;
  dir := 1;
  var event [16]uint32;
  logo_x := 50;
  logo_y := 50;

  for {
    for SDL_PollEvent(&event[0]) != 0 {
      if event[0] == uint32(256) { // SDL_QUIT
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 0;
      }
    }

    color += dir;
    if color == 255 {
      dir = -1;
    } else if color == 0 {
      dir = 1;
    }

    SDL_SetRenderDrawColor(renderer, 0, color, color, 255);
    SDL_RenderClear(renderer);

    SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255);
    // O
    DrawRect(renderer, 30, 60, logo_x + 40*0, logo_y);
    // p
    DrawRect(renderer, 30, 30,   logo_x + 40*1, logo_y + 30);
    SDL_RenderDrawLine(renderer, logo_x + 40*1, logo_y + 60,
                                 logo_x + 40*1, logo_y + 90);
    // e
    DrawRect(renderer, 30, 15,   logo_x + 40*2,      logo_y + 30);
    SDL_RenderDrawLine(renderer, logo_x + 40*2,      logo_y + 45,
                                 logo_x + 40*2,      logo_y + 60);
    SDL_RenderDrawLine(renderer, logo_x + 40*2,      logo_y + 60,
                                 logo_x + 40*2 + 30, logo_y + 60);
    // L
    SDL_RenderDrawLine(renderer, logo_x + 40*3,      logo_y,
                                 logo_x + 40*3,      logo_y + 60);
    SDL_RenderDrawLine(renderer, logo_x + 40*3,      logo_y + 60,
                                 logo_x + 40*3 + 30, logo_y + 60);
    // a
    DrawRect(renderer, 30, 15,   logo_x + 40*4,      logo_y + 45);
    SDL_RenderDrawLine(renderer, logo_x + 40*4 + 29, logo_y + 30,
                                 logo_x + 40*4 + 29, logo_y + 45);
    SDL_RenderDrawLine(renderer, logo_x + 40*4,      logo_y + 30,
                                 logo_x + 40*4 + 29, logo_y + 30);

    SDL_RenderPresent(renderer);
    SDL_Delay(16);
  }
}

func DrawRect(ren *int, w, h, x, y int) {
  var r [4]uint32;
  r[0] = uint32(x);
  r[1] = uint32(y);
  r[2] = uint32(w);
  r[3] = uint32(h);
  SDL_RenderDrawRect(ren, &r[0]);
}

extern "C" SDL_Init func(flag uint) int;
extern "C" SDL_GetError func() *byte;
extern "C" SDL_CreateWindow func(title *byte, x, y, w, h int, flags uint) *int;
extern "C" SDL_CreateRenderer func(win *int, index int, flags uint) *int;
extern "C" SDL_PollEvent func(e *uint32) int;
extern "C" SDL_DestroyWindow func(win *int);
extern "C" SDL_Quit func();
extern "C" SDL_SetRenderDrawColor func(ren *int, r, g, b, a int);
extern "C" SDL_RenderClear func(ren *int);
extern "C" SDL_RenderDrawRect func(ren *int, rect *uint32);
extern "C" SDL_RenderDrawLine func(ren *int, x1, y1, x2, y2 int);
extern "C" SDL_RenderPresent func(ren *int);
extern "C" SDL_Delay func(ms int);
extern "C" printf func(format *byte, ...) int;
